@charset "UTF-8";
/*!
BM ACF Page Builder Styles

Normalizing styles have been helped along thanks to the fine work of
Nicolas Gallagher and Jonathan Neal http://necolas.github.io/normalize.css/
*/
/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
# Neat
# Variables
# Mixins
--------------------------------------------------------------*/
/**
 * Sharman Grid System - https://www.npmjs.com/package/shamangrid
 * Original grid system by: https://github.com/csswizardry/csswizardry-grids
 * Modified to change word based class system to numbered & additional tidyup
 */
/*------------------------------------*$MIXINS
\*------------------------------------*/
/**
* These mixins are for the library to use only, you should not need to modify
* them at all.
*
* Enclose a block of code with a media query as named in `$breakpoints`.
*/
/**
* Drop relative positioning into silent classes which canâ€™t take advantage of
* the `[class*="push--"]` and `[class*="pull--"]` selectors.
*/
/*------------------------------------*$GRID SETUP
\*------------------------------------*/
/**
* 1. Allow the grid system to be used on lists.
* 2. Remove any margins and paddings that might affect the grid system.
* 3. Apply a negative `margin-left` to negate the columnsâ€™ gutters.
*/
.grid {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -16px;
  /* [3] */
  letter-spacing: -0.31em;
}

/* Opera hack */
.opera:-o-prefocus,
.grid {
  word-spacing: -0.43em;
}

/**
* 1. Cause columns to stack side-by-side.
* 2. Space columns apart.
* 3. Align columns to the tops of each other.
* 4. Full-width unless told to behave otherwise.
* 5. Required to combine fluid widths and fixed gutters.
*/
.grid__item {
  display: inline-block;
  /* [1] */
  padding-left: 16px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  /* [5] */
  /* [5] */
  box-sizing: border-box;
  /* [5] */
  letter-spacing: normal;
  word-spacing: normal;
}

/**
* Gutterless grids have all the properties of regular grids, minus any spacing.
* Extends `.grid`.
*/
.grid--full {
  margin-left: 0;
}

.grid--full > .grid__item {
  padding-left: 0;
}

/**
* Align the entire grid to the right. Extends `.grid`.
*/
.grid--right {
  text-align: right;
}

.grid--right > .grid__item {
  text-align: left;
}

/**
* Centered grids align grid items centrally without needing to use push or pull
* classes. Extends `.grid`.
*/
.grid--center {
  text-align: center;
}

.grid--center > .grid__item {
  text-align: left;
}

/**
* Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
* `.grid`.
*/
.grid--middle > .grid__item {
  vertical-align: middle;
}

.grid--bottom > .grid__item {
  vertical-align: bottom;
}

/**
* Create grids with narrower gutters. Extends `.grid`.
*/
.grid--narrow {
  margin-left: -8px;
}

.grid--narrow > .grid__item {
  padding-left: 8px;
}

/**
* Create grids with wider gutters. Extends `.grid`.
*/
.grid--wide {
  margin-left: -32px;
}

.grid--wide > .grid__item {
  padding-left: 32px;
}

/*------------------------------------*$WIDTHS
\*------------------------------------*/
/**
* Create our width classes, prefixed by the specified namespace.
*/
/**
* Our regular, non-responsive width classes.
*/
/**
  * Whole
  */
.col--1-1, .col--12-12 {
  width: 100%;
}

/**
  * Halves
  */
.col--1-2, .col--2-4, .col--3-6, .col--4-8, .col--5-10, .col--6-12 {
  width: 50%;
}

/**
  * Thirds
  */
.col--1-3, .col--2-6, .col--4-12 {
  width: 33.333%;
}

.col--2-3, .col--4-6, .col--8-12 {
  width: 66.666%;
}

/**
  * Quarters
  */
.col--1-4, .col--2-8, .col--3-12 {
  width: 25%;
}

.col--3-4, .col--6-8, .col--9-12 {
  width: 75%;
}

/**
  * Fifths
  */
.col--1-5, .col--2-10 {
  width: 20%;
}

.col--2-5, .col--4-10 {
  width: 40%;
}

.col--3-5, .col--6-10 {
  width: 60%;
}

.col--4-5, .col--8-10 {
  width: 80%;
}

/**
  * Sixths
  */
.col--1-6, .col--2-12 {
  width: 16.666%;
}

.col--5-6, .col--10-12 {
  width: 83.333%;
}

/**
  * Eighths
  */
.col--1-8 {
  width: 12.5%;
}

.col--3-8 {
  width: 37.5%;
}

.col--5-8 {
  width: 62.5%;
}

.col--7-8 {
  width: 87.5%;
}

/**
  * Tenths
  */
.col--1-10 {
  width: 10%;
}

.col--3-10 {
  width: 30%;
}

.col--7-10 {
  width: 70%;
}

.col--9-10 {
  width: 90%;
}

/**
  * Twelfths
  */
.col--1-12 {
  width: 8.333%;
}

.col--5-12 {
  width: 41.666%;
}

.col--7-12 {
  width: 58.333%;
}

.col--11-12 {
  width: 91.666%;
}

/**
* Our responsive classes, if we have enabled them.
*/
@media only screen and (min-width: 48em) {
  /**
  * Whole
  */
  .tablet--1-1, .tablet--12-12 {
    width: 100%;
  }
  /**
  * Halves
  */
  .tablet--1-2, .tablet--2-4, .tablet--3-6, .tablet--4-8, .tablet--5-10, .tablet--6-12 {
    width: 50%;
  }
  /**
  * Thirds
  */
  .tablet--1-3, .tablet--2-6, .tablet--4-12 {
    width: 33.333%;
  }
  .tablet--2-3, .tablet--4-6, .tablet--8-12 {
    width: 66.666%;
  }
  /**
  * Quarters
  */
  .tablet--1-4, .tablet--2-8, .tablet--3-12 {
    width: 25%;
  }
  .tablet--3-4, .tablet--6-8, .tablet--9-12 {
    width: 75%;
  }
  /**
  * Fifths
  */
  .tablet--1-5, .tablet--2-10 {
    width: 20%;
  }
  .tablet--2-5, .tablet--4-10 {
    width: 40%;
  }
  .tablet--3-5, .tablet--6-10 {
    width: 60%;
  }
  .tablet--4-5, .tablet--8-10 {
    width: 80%;
  }
  /**
  * Sixths
  */
  .tablet--1-6, .tablet--2-12 {
    width: 16.666%;
  }
  .tablet--5-6, .tablet--10-12 {
    width: 83.333%;
  }
  /**
  * Eighths
  */
  .tablet--1-8 {
    width: 12.5%;
  }
  .tablet--3-8 {
    width: 37.5%;
  }
  .tablet--5-8 {
    width: 62.5%;
  }
  .tablet--7-8 {
    width: 87.5%;
  }
  /**
  * Tenths
  */
  .tablet--1-10 {
    width: 10%;
  }
  .tablet--3-10 {
    width: 30%;
  }
  .tablet--7-10 {
    width: 70%;
  }
  .tablet--9-10 {
    width: 90%;
  }
  /**
  * Twelfths
  */
  .tablet--1-12 {
    width: 8.333%;
  }
  .tablet--5-12 {
    width: 41.666%;
  }
  .tablet--7-12 {
    width: 58.333%;
  }
  .tablet--11-12 {
    width: 91.666%;
  }
}

@media only screen and (min-width: 68.75em) {
  /**
  * Whole
  */
  .desk--1-1, .desk--12-12 {
    width: 100%;
  }
  /**
  * Halves
  */
  .desk--1-2, .desk--2-4, .desk--3-6, .desk--4-8, .desk--5-10, .desk--6-12 {
    width: 50%;
  }
  /**
  * Thirds
  */
  .desk--1-3, .desk--2-6, .desk--4-12 {
    width: 33.333%;
  }
  .desk--2-3, .desk--4-6, .desk--8-12 {
    width: 66.666%;
  }
  /**
  * Quarters
  */
  .desk--1-4, .desk--2-8, .desk--3-12 {
    width: 25%;
  }
  .desk--3-4, .desk--6-8, .desk--9-12 {
    width: 75%;
  }
  /**
  * Fifths
  */
  .desk--1-5, .desk--2-10 {
    width: 20%;
  }
  .desk--2-5, .desk--4-10 {
    width: 40%;
  }
  .desk--3-5, .desk--6-10 {
    width: 60%;
  }
  .desk--4-5, .desk--8-10 {
    width: 80%;
  }
  /**
  * Sixths
  */
  .desk--1-6, .desk--2-12 {
    width: 16.666%;
  }
  .desk--5-6, .desk--10-12 {
    width: 83.333%;
  }
  /**
  * Eighths
  */
  .desk--1-8 {
    width: 12.5%;
  }
  .desk--3-8 {
    width: 37.5%;
  }
  .desk--5-8 {
    width: 62.5%;
  }
  .desk--7-8 {
    width: 87.5%;
  }
  /**
  * Tenths
  */
  .desk--1-10 {
    width: 10%;
  }
  .desk--3-10 {
    width: 30%;
  }
  .desk--7-10 {
    width: 70%;
  }
  .desk--9-10 {
    width: 90%;
  }
  /**
  * Twelfths
  */
  .desk--1-12 {
    width: 8.333%;
  }
  .desk--5-12 {
    width: 41.666%;
  }
  .desk--7-12 {
    width: 58.333%;
  }
  .desk--11-12 {
    width: 91.666%;
  }
}

/*------------------------------------*$PUSH
\*------------------------------------*/
/**
* Push classes, to move grid items over to the right by certain amounts.
*/
/**
  * Not a particularly great selector, but the DRYest way to do things.
  */
[class*="push--"] {
  position: relative;
}

/**
  * Whole
  */
.push--1-1, .push--one-whole {
  left: 100%;
}

/**
  * Halves
  */
.push--1-2, .push--one-half, .push--2-4, .push--3-6, .push--4-8, .push--5-10, .push--6-12 {
  left: 50%;
}

/**
  * Thirds
  */
.push--1-3, .push--2-6, .push--4-12 {
  left: 33.333%;
}

.push--2-3, .push--4-6, .push--8-12 {
  left: 66.666%;
}

/**
  * Quarters
  */
.push--1-4, .push--2-8, .push--3-12 {
  left: 25%;
}

.push--3-4, .push--6-8, .push--9-12 {
  left: 75%;
}

/**
  * Fifths
  */
.push--1-5, .push--2-10 {
  left: 20%;
}

.push--2-5, .push--4-10 {
  left: 40%;
}

.push--3-5, .push--6-10 {
  left: 60%;
}

.push--4-5, .push--8-10 {
  left: 80%;
}

/**
  * Sixths
  */
.push--1-6, .push--2-12 {
  left: 16.666%;
}

.push--5-6, .push--10-12 {
  left: 83.333%;
}

/**
  * Eighths
  */
.push--1-8 {
  left: 12.5%;
}

.push--3-8 {
  left: 37.5%;
}

.push--5-8 {
  left: 62.5%;
}

.push--7-8 {
  left: 87.5%;
}

/**
  * Tenths
  */
.push--1-10 {
  left: 10%;
}

.push--3-10 {
  left: 30%;
}

.push--7-10 {
  left: 70%;
}

.push--9-10 {
  left: 90%;
}

/**
  * Twelfths
  */
.push--1-12 {
  left: 8.333%;
}

.push--5-12 {
  left: 41.666%;
}

.push--7-12 {
  left: 58.333%;
}

.push--11-12 {
  left: 91.666%;
}

@media only screen and (min-width: 48em) {
  /**
  * Whole
  */
  .push--tablet--1-1, .push--tablet--one-whole {
    left: 100%;
  }
  /**
  * Halves
  */
  .push--tablet--1-2, .push--tablet--one-half, .push--tablet--2-4, .push--tablet--3-6, .push--tablet--4-8, .push--tablet--5-10, .push--tablet--6-12 {
    left: 50%;
  }
  /**
  * Thirds
  */
  .push--tablet--1-3, .push--tablet--2-6, .push--tablet--4-12 {
    left: 33.333%;
  }
  .push--tablet--2-3, .push--tablet--4-6, .push--tablet--8-12 {
    left: 66.666%;
  }
  /**
  * Quarters
  */
  .push--tablet--1-4, .push--tablet--2-8, .push--tablet--3-12 {
    left: 25%;
  }
  .push--tablet--3-4, .push--tablet--6-8, .push--tablet--9-12 {
    left: 75%;
  }
  /**
  * Fifths
  */
  .push--tablet--1-5, .push--tablet--2-10 {
    left: 20%;
  }
  .push--tablet--2-5, .push--tablet--4-10 {
    left: 40%;
  }
  .push--tablet--3-5, .push--tablet--6-10 {
    left: 60%;
  }
  .push--tablet--4-5, .push--tablet--8-10 {
    left: 80%;
  }
  /**
  * Sixths
  */
  .push--tablet--1-6, .push--tablet--2-12 {
    left: 16.666%;
  }
  .push--tablet--5-6, .push--tablet--10-12 {
    left: 83.333%;
  }
  /**
  * Eighths
  */
  .push--tablet--1-8 {
    left: 12.5%;
  }
  .push--tablet--3-8 {
    left: 37.5%;
  }
  .push--tablet--5-8 {
    left: 62.5%;
  }
  .push--tablet--7-8 {
    left: 87.5%;
  }
  /**
  * Tenths
  */
  .push--tablet--1-10 {
    left: 10%;
  }
  .push--tablet--3-10 {
    left: 30%;
  }
  .push--tablet--7-10 {
    left: 70%;
  }
  .push--tablet--9-10 {
    left: 90%;
  }
  /**
  * Twelfths
  */
  .push--tablet--1-12 {
    left: 8.333%;
  }
  .push--tablet--5-12 {
    left: 41.666%;
  }
  .push--tablet--7-12 {
    left: 58.333%;
  }
  .push--tablet--11-12 {
    left: 91.666%;
  }
}

@media only screen and (min-width: 68.75em) {
  /**
  * Whole
  */
  .push--desk--1-1, .push--desk--one-whole {
    left: 100%;
  }
  /**
  * Halves
  */
  .push--desk--1-2, .push--desk--one-half, .push--desk--2-4, .push--desk--3-6, .push--desk--4-8, .push--desk--5-10, .push--desk--6-12 {
    left: 50%;
  }
  /**
  * Thirds
  */
  .push--desk--1-3, .push--desk--2-6, .push--desk--4-12 {
    left: 33.333%;
  }
  .push--desk--2-3, .push--desk--4-6, .push--desk--8-12 {
    left: 66.666%;
  }
  /**
  * Quarters
  */
  .push--desk--1-4, .push--desk--2-8, .push--desk--3-12 {
    left: 25%;
  }
  .push--desk--3-4, .push--desk--6-8, .push--desk--9-12 {
    left: 75%;
  }
  /**
  * Fifths
  */
  .push--desk--1-5, .push--desk--2-10 {
    left: 20%;
  }
  .push--desk--2-5, .push--desk--4-10 {
    left: 40%;
  }
  .push--desk--3-5, .push--desk--6-10 {
    left: 60%;
  }
  .push--desk--4-5, .push--desk--8-10 {
    left: 80%;
  }
  /**
  * Sixths
  */
  .push--desk--1-6, .push--desk--2-12 {
    left: 16.666%;
  }
  .push--desk--5-6, .push--desk--10-12 {
    left: 83.333%;
  }
  /**
  * Eighths
  */
  .push--desk--1-8 {
    left: 12.5%;
  }
  .push--desk--3-8 {
    left: 37.5%;
  }
  .push--desk--5-8 {
    left: 62.5%;
  }
  .push--desk--7-8 {
    left: 87.5%;
  }
  /**
  * Tenths
  */
  .push--desk--1-10 {
    left: 10%;
  }
  .push--desk--3-10 {
    left: 30%;
  }
  .push--desk--7-10 {
    left: 70%;
  }
  .push--desk--9-10 {
    left: 90%;
  }
  /**
  * Twelfths
  */
  .push--desk--1-12 {
    left: 8.333%;
  }
  .push--desk--5-12 {
    left: 41.666%;
  }
  .push--desk--7-12 {
    left: 58.333%;
  }
  .push--desk--11-12 {
    left: 91.666%;
  }
}

/*------------------------------------*$PULL
\*------------------------------------*/
/**
* Pull classes, to move grid items back to the left by certain amounts.
*/
/*--------------------------------------------------------------
# Varibales
# Mixins
--------------------------------------------------------------*/
.grid .grid__item .grid__item-content div[class^="column-element-"] {
  *zoom: 1;
}

.grid .grid__item .grid__item-content div[class^="column-element-"]:before, .grid .grid__item .grid__item-content div[class^="column-element-"]:after {
  content: " ";
  display: table;
}

.grid .grid__item .grid__item-content div[class^="column-element-"]:after {
  clear: both;
}

/*--------------------------------------------------------------
# Grid
--------------------------------------------------------------*/
.h-align-content-center {
  text-align: center;
}

.v-align-top {
  vertical-align: top;
}

.v-align-middle {
  vertical-align: middle;
}

.v-align-bottom {
  vertical-align: bottom;
}

.grid-wrapper, .page-builder-row {
  width: 100%;
  max-width: 1170px;
  margin-left: auto;
  margin-right: auto;
}

.page-builder-row {
  position: relative;
}

.page-builder-row.full-width {
  max-width: 100%;
  padding: 0;
}

.page-builder-row.full-width .full-width-inner {
  width: 100%;
  max-width: 1170px;
  margin-left: auto;
  margin-right: auto;
}

.grid section {
  font-size: 20px;
}

.grid .grid__item .grid__item-content {
  padding: 16px;
}

.to-animate {
  opacity: 0;
  overflow: hidden;
}

.visible {
  opacity: 1;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
